version: '3.9'
services:
  jaeger:
    image: jaegertracing/all-in-one:1
    ports:
      - '6831:6831/udp'
      - '16686:16686'
  zookeeper:
    image: quay.io/debezium/zookeeper:1.8
    ports:
      - '2181:2181'
      - '2888:2888'
      - '3888:3888'
  kafka:
    image: quay.io/debezium/kafka:1.8
    ports:
      - '9092:9092'
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
  postgres:
    image:  debezium/postgres:15-alpine
    ports:
      - '5433:5432'
    healthcheck:
      test: "pg_isready -U admin -d auth"
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
      - POSTGRES_DB=auth
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - PGPASSWORD=postgrespw
  connect:
    image: debezium/strimzi-connect
    build:
      context: .
      args:
        DEBEZIUM_CONNECTOR_VERSION: "${DEBEZIUM_CONNECTOR_VERSION:-2.4.0.Alpha2}"
        STRIMZI_VERSION: "${STRIMZI_VERSION:-latest-kafka-3.5.1}"
    ports:
      - 8083:8083
    links:
      - kafka
      - postgres
    environment:
      - KAFKA_LOG4J_OPTS=-Dlog4j.configuration=file:/opt/kafka/config/connect-log4j.properties
      - KAFKA_CONNECT_BOOTSTRAP_SERVERS=kafka:9092
      - |
        KAFKA_CONNECT_CONFIGURATION=
        key.converter=org.apache.kafka.connect.json.JsonConverter
        value.converter=org.apache.kafka.connect.json.JsonConverter
        key.converter.schemas.enable=false
        value.converter.schemas.enable=false
        group.id=connect
        offset.storage.topic=connect-offsets
        offset.storage.replication.factor=1
        config.storage.topic=connect-configs
        config.storage.replication.factor=1
        status.storage.topic=connect-status
        status.storage.replication.factor=1
        producer.interceptor.classes=io.debezium.tracing.DebeziumTracingProducerInterceptor
      - OTEL_SERVICE_NAME=kafka-connect
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=none
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - OTEL_TRACES_SAMPLER=always_on
      - STRIMZI_TRACING=opentelemetry
    command: /opt/kafka/kafka_connect_run.sh
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    links:
      - zookeeper
      - kafka
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
  debezium-ui:
    container_name: debezium-ui
    image: quay.io/debezium/debezium-ui:1.8
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CONNECT_URIS=http://connect:8083
    links:
      - connect
    depends_on:
      connect:
        condition: service_started